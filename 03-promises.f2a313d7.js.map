{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAExBA,E,IAXUO,SAASC,cAAc,SAe/BC,iBAAiB,UAEtB,SAAqBC,GACnBA,EAAIC,iBACJ,IAEqBC,EAAjBF,EAAIG,cADNC,SAAYC,EAAKH,EAALZ,MAAOgB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAGvBC,EAAaC,OAAOJ,EAAMK,OAC1BC,EAAYF,OAAOF,EAAOG,OAC1BE,EAAYH,OAAOH,EAAKI,OAE5B,GAAIF,EAAa,GAAKG,EAAY,GAAKC,EAAY,EAIjD,YAHAC,EAAA3B,GAAS4B,OAAOC,QACd,kCAKJ,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAWK,GAAK,EAClC5B,EAAc,EAAI4B,EAAGR,EAAaQ,EAAIJ,GACnCK,MAAK,SAAAC,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MACjB6B,QAAQC,IAAI,uBAAwCC,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M,IAE3DgC,OAAM,SAAAJ,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MAClB6B,QAAQC,IAAI,sBAAqCC,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n}, delay);\n  });\n}\n\nform.addEventListener('submit', btnOnSubmit);\n\nfunction btnOnSubmit(evt) {\n  evt.preventDefault();\n  const {\n    elements: { delay, step, amount }\n  } = evt.currentTarget;\n\n  let startDelay = Number(delay.value);\n  let amountNum = Number(amount.value);\n  let stepDalay = Number(step.value);\n\n  if (startDelay < 0 || amountNum < 0 || stepDalay < 0) {\n    Notiflix.Notify.failure(\n      '!!!Value cannot be negative!!!'\n    )\n    return;\n  }\n\n  for (let i = 0; i < amountNum; i += 1) {\n    createPromise(1 + i, startDelay = i * stepDalay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","evt","preventDefault","_elements","currentTarget","elements","delay1","step","amount","startDelay","Number","value","amountNum","stepDalay","$parcel$interopDefault","Notify","failure","i","then","param","console","log","concat","catch"],"version":3,"file":"03-promises.f2a313d7.js.map"}