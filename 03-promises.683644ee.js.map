{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAEhCA,EAAM,G,CAXIO,SAASC,cAAc,SAe/BC,iBAAiB,UAEtB,SAAqBC,GACnBA,EAAIC,iBACJ,MACEC,UAAYZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAIM,cAER,IAAIC,EAAaC,OAAOL,EAAMM,OAC1BC,EAAYF,OAAOH,EAAOI,OAC1BE,EAAYH,OAAOJ,EAAKK,OAE5B,GAAIF,EAAa,GAAKG,EAAY,GAAKC,EAAY,EAIjD,YAHAC,EAAA1B,GAAS2B,OAAOC,QACd,kCAKJ,IAAK,IAAIC,EAAI,EAAGA,GAAKL,EAAWK,GAAK,EACnC3B,EAAe2B,EAAGR,EAAaQ,EAAIJ,GAChCK,MAAK,EAAC3B,SAAEA,EAAQC,MAAEA,MACjBsB,EAAA1B,GAAS2B,OAAOI,QACd,uBAAqB5B,QAAiBC,MAAU,IAGnD4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClBsB,EAAA1B,GAAS2B,OAAOC,QACd,sBAAoBzB,QAAeC,MAAU,IAGnDiB,GAAcI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n}, delay);\n  });\n}\n\nform.addEventListener('submit', btnOnSubmit);\n\nfunction btnOnSubmit(evt) {\n  evt.preventDefault();\n  const {\n    elements: { delay, step, amount }\n  } = evt.currentTarget;\n\n  let startDelay = Number(delay.value);\n  let amountNum = Number(amount.value);\n  let stepDalay = Number(step.value);\n\n  if (startDelay < 0 || amountNum < 0 || stepDalay < 0) {\n    Notiflix.Notify.failure(\n      '!!!Value cannot be negative!!!'\n    )\n    return;\n  }\n\n  for (let i = 1; i <= amountNum; i += 1) {\n    createPromise( i, startDelay = i * stepDalay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    startDelay += stepDalay\n  }\n}"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","evt","preventDefault","elements","delay1","step","amount","currentTarget","startDelay","Number","value","amountNum","stepDalay","$parcel$interopDefault","Notify","failure","i","then","success","catch"],"version":3,"file":"03-promises.683644ee.js.map"}